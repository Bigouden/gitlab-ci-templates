workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID

image: docker:latest
services:
  - docker:dind

stages:
  - Quality
  - Build
  - Inspect
  - Security
  - Release
  
variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:test
  CONTAINER_VERSION_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  CONTAINER_LATEST_IMAGE: $CI_REGISTRY_IMAGE:latest

Hadolint:
  stage: Quality
  image: hadolint/hadolint:latest-debian
  script:
    - hadolint --ignore DL3013 --ignore DL3018 Dockerfile

Build:
  stage: Build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE
    
Dive:
  stage: Inspect
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run -v /var/run/docker.sock:/var/run/docker.sock:ro wagoodman/dive $CONTAINER_TEST_IMAGE --ci

Anchore:
  stage: Security
  image: 
    name: anchore/anchore-engine:latest
    entrypoint: [""]
  services:
    - name: anchore/engine-db-preload:latest
      alias: anchore-db
  script:
    - |
      curl -o /tmp/anchore_ci_tools.py https://raw.githubusercontent.com/anchore/ci-tools/master/scripts/anchore_ci_tools.py
      chmod +x /tmp/anchore_ci_tools.py
      ln -s /tmp/anchore_ci_tools.py /usr/local/bin/anchore_ci_tools
    - anchore_ci_tools --setup
    - anchore-cli registry add "$CI_REGISTRY" "$CI_REGISTRY_USER" "$CI_REGISTRY_PASSWORD"  --skip-validate
    - anchore_ci_tools --analyze --report --image "$CONTAINER_TEST_IMAGE" --timeout "$ANCHORE_TIMEOUT"
    - |
      if ; then
        anchore-cli evaluate check "$CONTAINER_TEST_IMAGE"
      else
        set +o pipefail
        anchore-cli evaluate check "$CONTAINER_TEST_IMAGE" | tee /dev/null
      fi
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}
    paths:
      - image-*-report.json
  variables:
    GIT_STRATEGY: none
    ANCHORE_HOST_ID: "localhost"
    ANCHORE_ENDPOINT_HOSTNAME: "localhost"
    ANCHORE_CLI_USER: "admin"
    ANCHORE_CLI_PASS: "secret"
    ANCHORE_CLI_SSL_VERIFY: "n"
    ANCHORE_FAIL_ON_POLICY: "true"
    ANCHORE_TIMEOUT: 500
    POSTGRES_HOST_AUTH_METHOD: "trust"
    
Release:
  stage: Release
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_VERSION_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_LATEST_IMAGE
    - docker push $CONTAINER_VERSION_IMAGE
    - docker push $CONTAINER_LATEST_IMAGE
  variables:
    GIT_STRATEGY: none
  when: manual