default:
  interruptible: true

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:test
  CONTAINER_VERSION_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  CONTAINER_LATEST_IMAGE: $CI_REGISTRY_IMAGE:latest

Hadolint:
  stage: Quality
  image: hadolint/hadolint:latest-debian
  script:
    - hadolint --ignore DL3013 --ignore DL3018 Dockerfile
  dependencies: []
  rules:
    - exists:
      - Dockerfile
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never

Dockerfile:
  stage: Build
  image: docker:latest
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE || true
    - docker build --cache-from $CONTAINER_TEST_IMAGE --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE
  dependencies: []
  rules:
    - exists:
      - Dockerfile
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never
      
RootFS:
  stage: Build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - apk add --update curl tar
  image: docker:latest
  script:
    - ./build.sh
    - docker tag $CI_PROJECT_NAME $CONTAINER_TEST_IMAGE
    - docker push $CONTAINER_TEST_IMAGE
  dependencies: []
  rules:
    - exists:
      - build.sh
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never

Dive:
  stage: Inspect
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  image: 
    name: wagoodman/dive:latest
    entrypoint: [""]
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - dive $CONTAINER_TEST_IMAGE
  dependencies: []
  variables:
    CI: "true"
  when: manual
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never

Anchore:
  stage: Inspect
  image: 
    name: anchore/inline-scan:v0.8.2
  services:
    - name: anchore/inline-scan:v0.8.2
      alias: anchore-engine
      command: ["start"]
  script:
    - anchore-cli system wait
    - anchore-cli registry add "$CI_REGISTRY" "$CI_REGISTRY_USER" "$CI_REGISTRY_PASSWORD" --skip-validate
    - anchore-cli image add "$CONTAINER_TEST_IMAGE"
    - anchore-cli image wait "$CONTAINER_TEST_IMAGE"
    - anchore-cli evaluate check --detail "$CONTAINER_TEST_IMAGE"
  allow_failure: true
  variables:
    ANCHORE_CLI_URL: "http://anchore-engine:8228/v1"
    GIT_STRATEGY: none
  dependencies: []
  when: manual
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never

Gitlab:
  stage: Release
  image: docker:latest
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_VERSION_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_LATEST_IMAGE
    - docker push $CONTAINER_VERSION_IMAGE
    - docker push $CONTAINER_LATEST_IMAGE
  variables:
    GIT_STRATEGY: none
  dependencies: []
  when: manual
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never

Gitlab:
  stage: Release Latest
  image: docker:latest
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - MR_BRANCH_LAST_COMMIT_SHA=$(
      curl -s \
        --header "PRIVATE-TOKEN: $CI_PRIVATE_TOKEN" \
        "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/commits/$CI_COMMIT_SHA" |\
        jq -r '.parent_ids | del(.[] | select(. == "'$CI_COMMIT_BEFORE_SHA'")) | .[-1]'
    )
    - MR_BRANCH_NAME=$(
      curl -s \
        --header "PRIVATE-TOKEN: $CI_PRIVATE_TOKEN" \
        "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/commits/$MR_BRANCH_LAST_COMMIT_SHA/merge_requests" |\
        jq -r '.[0].source_branch'
    )
  script:
    - docker pull $CI_REGISTRY_IMAGE:$MR_BRANCH_NAME
    - docker tag $CI_REGISTRY_IMAGE:$MR_BRANCH_NAME $CONTAINER_LATEST_IMAGE
    - docker push $CONTAINER_LATEST_IMAGE
  variables:
    GIT_STRATEGY: none
  dependencies: []
  when: manual
  only:
    - master
  
DockerHub:
  stage: Release
  image: docker:latest
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $DOCKER_HUB_VERSION_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $DOCKER_HUB_LATEST_IMAGE
    - docker push $DOCKER_HUB_VERSION_IMAGE
    - docker push $DOCKER_HUB_LATEST_IMAGE
  variables:
    GIT_STRATEGY: none
    DOCKER_HUB_VERSION_IMAGE: $DOCKER_HUB_USER/$CI_PROJECT_NAME:$CI_COMMIT_REF_NAME
    DOCKER_HUB_LATEST_IMAGE: $DOCKER_HUB_USER/$CI_PROJECT_NAME:latest
  dependencies: []
  rules:
    - if: $DOCKER_HUB_USER && $DOCKER_HUB_PASSWORD
      when: manual
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never
