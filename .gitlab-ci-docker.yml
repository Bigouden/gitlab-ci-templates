workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID

image: docker:latest
services:
  - docker:dind

stages:
  - Quality
  - Build
  - Inspect
  - Release
  
variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:test
  CONTAINER_VERSION_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  CONTAINER_LATEST_IMAGE: $CI_REGISTRY_IMAGE:latest

Hadolint:
  stage: Quality
  image: hadolint/hadolint:latest-debian
  script:
    - hadolint --ignore DL3013 --ignore DL3018 Dockerfile

Build:
  stage: Build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE || true
    - docker build --cache-from $CONTAINER_TEST_IMAGE --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

Dive:
  stage: Inspect
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run -v /var/run/docker.sock:/var/run/docker.sock:ro wagoodman/dive $CONTAINER_TEST_IMAGE --ci

Anchore:
  stage: Inspect
  image: 
    name: anchore/inline-scan:latest
  services:
    - name: anchore/inline-scan:latest
      alias: anchore-engine
      command: ["start"]
  script:
    - anchore-cli system wait
    - anchore-cli registry add "$CI_REGISTRY" "$CI_REGISTRY_USER" "$CI_REGISTRY_PASSWORD" --skip-validate
    - anchore-cli image add "$CONTAINER_TEST_IMAGE"
    - anchore-cli image wait "$CONTAINER_TEST_IMAGE"
    - anchore-cli evaluate check --detail "$CONTAINER_TEST_IMAGE"
  variables:
    ANCHORE_CLI_URL: "http://anchore-engine:8228/v1"
    GIT_STRATEGY: none

Gitlab:
  stage: Release
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_VERSION_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_LATEST_IMAGE
    - docker push $CONTAINER_VERSION_IMAGE
    - docker push $CONTAINER_LATEST_IMAGE
  variables:
    GIT_STRATEGY: none
  when: manual
  
DockerHub:
  stage: Release
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $DOCKER_HUB_VERSION_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $DOCKER_HUB_LATEST_IMAGE
    - docker push $DOCKER_HUB_VERSION_IMAGE
    - docker push $DOCKER_HUB_LATEST_IMAGE
  variables:
    GIT_STRATEGY: none
    DOCKER_HUB_VERSION_IMAGE: $DOCKER_HUB_USER/$CI_PROJECT_NAME:$CI_COMMIT_REF_NAME
    DOCKER_HUB_LATEST_IMAGE: $DOCKER_HUB_USER/$CI_PROJECT_NAME:latest
  rules:
    - if: $DOCKER_HUB_USER && $DOCKER_HUB_PASSWORD
      when: manual